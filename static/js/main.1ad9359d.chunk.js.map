{"version":3,"sources":["Itemslist.jsx","Todo.jsx","index.js"],"names":["Itemslist","props","className","style","textDecoration","item","App","list","JSON","parse","localStorage","getItem","useState","items","setitems","curr_item","set_curr_item","edit_item","set_edit_item","edit_item_btn","set_edit_item_btn","useEffect","setItem","stringify","value","onChange","e","target","placeholder","type","Button","onClick","item_obj","name","id","Date","getTime","toString","done_state","map","ele","preval","minWidth","padding","color","width","height","element","completed","index","to_edit","find","edit","newitems","filter","delete_item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1ad9359d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Itemslist = (props) => {\r\n    return (\r\n        <>\r\n         <p className=\"list_item\" style={{textDecoration:`${props.style}`}}>{props.item}</p>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Itemslist\r\n","import React, { useState, useEffect } from 'react'\r\nimport List from './Itemslist'\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport Button from '@material-ui/core/Button';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport AssignmentTurnedInOutlinedIcon from '@material-ui/icons/AssignmentTurnedInOutlined';\r\n\r\nconst App = () => {\r\n    //getting from local storge\r\n    let list = JSON.parse(localStorage.getItem(\"todo_list\"))\r\n\r\n    const setitem = () => {\r\n        if (list) {\r\n            return list;\r\n        }\r\n        else\r\n            return [];\r\n    }\r\n\r\n    const [items, setitems] = useState(setitem())\r\n    const [curr_item, set_curr_item] = useState('')\r\n    const [edit_item, set_edit_item] = useState()\r\n    const [edit_item_btn, set_edit_item_btn] = useState(false)\r\n\r\n\r\n    const edit = (id) => {\r\n        set_edit_item_btn(true)\r\n        let to_edit = items.find((ele) => {\r\n            return id === ele.id\r\n        })\r\n        set_curr_item(to_edit.name)\r\n        set_edit_item(to_edit)\r\n    }\r\n\r\n    const done_item = (id) => {\r\n        setitems(items.map((ele) => {\r\n            if (ele.id === id) {\r\n                if (ele.done_state)\r\n                    return { ...ele, done_state: false }\r\n                else\r\n                    return { ...ele, done_state: true }\r\n            }\r\n            return ele;\r\n        }))\r\n    }\r\n\r\n    const delete_item = (id) => {\r\n        const newitems = items.filter((ele) => {\r\n            return ele.id !== id\r\n        })\r\n        setitems(newitems);\r\n    }\r\n\r\n    const add_item = () => {\r\n        const item_obj = { name: curr_item, id: new Date().getTime().toString(), done_state: false } //it is necessary bcoz we acn set item to edit\r\n        // on input tag but to bring it back to its own position id ie req.. but we can send only name to it if we don't use this\r\n        //(we can but it req another use state , so i is easier one)\r\n        if (curr_item === \"\") {\r\n            //do nothing\r\n        }\r\n        else if (curr_item && edit_item_btn) {\r\n            setitems(items.map((ele) => {\r\n                if (ele.id === edit_item.id) {\r\n                    return { ...ele, name: curr_item }\r\n                }\r\n                return ele;\r\n            }))\r\n            set_curr_item(\"\")\r\n            set_edit_item('')\r\n            set_edit_item_btn(false)\r\n\r\n        }\r\n        else {\r\n            setitems((preval) => {\r\n                return [item_obj, ...preval];\r\n            })\r\n            set_curr_item(\"\");\r\n        }\r\n    }\r\n\r\n    //this will get automatically call when page is refershed ,and when any thing changed in \"items\"\r\n    useEffect(() => {\r\n        localStorage.setItem(\"todo_list\", JSON.stringify(items))\r\n    }, [items])\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"main_body\">\r\n                <div className=\"container\">\r\n                    <h1>ToDo List</h1>\r\n                    <div className=\"input_sec\">\r\n                        <input value={curr_item} onChange={(e) => { set_curr_item(e.target.value) }} placeholder=\"Enter Task\" type=\"text\" />\r\n                        <Button onClick={add_item} style={{ minWidth: \"auto\", padding: 0, color: \"aqua\" }} color=\"secondary\">\r\n                            {edit_item_btn ? < EditOutlinedIcon style={{ width: \"35px\", height: \"35px\" }} /> :\r\n                                < AddCircleIcon style={{ width: \"35px\", height: \"35px\" }} />}\r\n                        </Button>\r\n                    </div>\r\n\r\n                    <div className=\"items\">\r\n                        {items.map((element) => {\r\n                            let completed\r\n                            element.done_state ? completed = \"line-through\" : completed = \"none\"\r\n                            return (\r\n                                <>\r\n                                    <div className=\"my_item\">\r\n                                        <List style={completed} item={element.name} key={element.id} index={element.id} />\r\n                                        <Button className=\"edit\" onClick={() => edit(element.id)} style={{ minWidth: \"auto\", padding: 0, color: \"black\" }} color=\"secondary\">\r\n                                            <EditOutlinedIcon style={{ width: \"25px\", height: \"25px\" }} />\r\n                                        </Button>\r\n                                        <Button className=\"done\" onClick={() => done_item(element.id)} style={{ minWidth: \"auto\", padding: 0, color: \"green\" }} color=\"secondary\">\r\n                                            <AssignmentTurnedInOutlinedIcon style={{ width: \"25px\", height: \"25px\" }} />\r\n                                        </Button>\r\n                                        <Button className=\"delete\" onClick={() => delete_item(element.id)} style={{ minWidth: \"auto\", padding: 0 }} color=\"secondary\">\r\n                                            <DeleteIcon style={{ width: \"25px\", height: \"25px\" }} />\r\n                                        </Button>\r\n                                    </div>\r\n                                </>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './Todo.jsx';\r\nimport './Todo.css';\r\n\r\nReactDOM.render(<App />,document.getElementById('root'));"],"sourceRoot":""}